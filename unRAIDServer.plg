<?xml version='1.0' standalone='yes'?>

<!DOCTYPE PLUGIN [
<!ENTITY name      "unRAIDServer">
<!ENTITY author    "LimeTech">
<!ENTITY version   "6.5.1">
<!ENTITY category  "stable">
<!ENTITY pluginURL "https://s3.amazonaws.com/dnld.lime-technology.com/&category;/&name;.plg">
<!ENTITY zip       "https://s3.amazonaws.com/dnld.lime-technology.com/&category;/&name;-&version;-x86_64.zip">
<!ENTITY md5       "https://s3.amazonaws.com/dnld.lime-technology.com/&category;/&name;-&version;-x86_64.md5">
<!ENTITY files     "bz*,make_bootable.bat,make_bootable_linux,make_bootable_mac,memtest,*.txt,syslinux/syslinux.cfg-">

<!ENTITY infozip   "infozip-6.0-i486-1.txz">
]>

<PLUGIN  name="&name;"
         author="&author;"
         version="&version;"
         category="&category;"
         pluginURL="&pluginURL;">

<CHANGES>
<![CDATA[
### Version 6.5.1 2018-04-21

This is primarily a bug fix/maintenance update.  Here are some highlights:

- Includes the latest LTS (Long Term Support) linux kernel and Intel microcode for latest
Spectre/Meltdown mitigations.
- We downgraded docker from 17.12.1 to 17.09.1 in order to improve compatibility. We anticipate
upgrading docker to 18.03.x in next unRAID OS minor release series.
- There have been numerous improvements to VM and Docker Managers as well as several bug fixes and
improvements throughout the webGUI.

Due to security updates **all users are encouraged to update**.

Base distro:

- curl: version 7.59.0 (CVE-2018-1000120, CVE-2018-1000121, CVE-2018-1000122)
- dmidecode: version 3.1
- dnsmasq: version 2.79
- docker: version 17.09.1 (downgrade from version 17.12.1)
- e2fsprogs: version 1.44.0
- fontconfig: version 2.12.6
- hdparm: version 9.55
- intel-microcode: version 20180312
- kernel-firmware: version 20180222_7344ec9
- libevdev: version 1.5.9
- libtirpc: version 1.0.3
- libxml2: version 2.9.8
- logrotate: version 3.14.0
- mozilla-firefox: version 59.0.1 (CVE-2018-5127, CVE-2018-5128, CVE-2018-5129, CVE-2018-5130, CVE-2018-5131, CVE-2018-5132, CVE-2018-5133, CVE-2018-5134, CVE-2018-5135, CVE-2018-5136, CVE-2018-5137, CVE-2018-5138, CVE-2018-5140, CVE-2018-5141, CVE-2018-5142, CVE-2018-5143, CVE-2018-5126, CVE-2018-5125, CVE-2018-5146, CVE-2018-5147)
- nano: version 2.9.4
- nginx: version 1.13.11 (with nchan: version 1.1.14)
- openssl: version 1.0.2o (CVE-2018-0739)
- openssl-solibs: version 1.0.2o (CVE-2018-0739)
- samba: version 4.7.7
- sysvinit-scripts: version 2.1 (rev7)
- transset: version 1.0.2
- xinit: version 1.4.0
- xkill: version 1.0.5
- xload: version 1.1.3
- xlsclients: version 1.1.4
- xmessage: version 1.0.5
- xprop: version 1.2.3
- xrdb: version 1.1.1
- xrefresh: version 1.0.6
- xset: version 1.2.4
- xsetroot: version 1.1.2
- xsm: version 1.0.4
- xwd: version 1.0.7
- xwininfo: version 1.1.4
- xwud: version 1.0.5

Linux kernel:

- version 4.14.35
- out-of-tree drivers:
  - intel ixgbe: version 5.3.6
  - intel ixgbevf: version 4.3.4

Management:

- Ensure hostname contains only valid NETBIOS characters
- Yet another mover logging fix
- emhttp: fix possible divide by zero error in cacluating cpustats
- mover: Regression: fix "mover: started/finished" message not output when mover logging enabled
- samba: set 'allocation roundup size = 4096' in /etc/samba/smb.conf (fix inaccurate file usage vs. disk usage reporting)
- update smartmontools drivedb and hwdata/{pci.ids,usb.ids,oui.txt,manuf.txt}
- webgui: Added confirmation question before upgrading unRAID OS
- webgui: Fixed next parity schedule indicator on dashboard page: when no 2nd parity disk
- webgui: Added placeholder to MTU size with automatic detection
- webgui: Fixed: encode container names in update all command
- webgui: Docker: improved processing of custom network types
- webgui: Added custom bridge networks in dropdown list of container network choices
- webgui: Fixed hide DNSv6 entries when empty
- webgui: VM Manager: Allow USB3 controllers to have 15 ports by default instead of 4
- webgui: Add missing csrf_token when adding new container
- webgui: Added next parity schedule indicator on dashboard page
- webgui: Update cron when removing a plugin
- webgui: Nchan/Nginx: Use long polling for Safari and websockets for all other browsers
- webgui: Fixed DockerCreate regression error
- webgui: Docker: optimized URL caching
- webgui: Docker settings: improved IP format checking
- webgui: Fixed ContainerManager regression error
- webgui: Make "bridge" first network choice in new container creation
- webgui: Added  warning when system notifications are disabled
- webgui: Hide settings when interface is member of a bond or bridge
  - Bond/bridge membership is shown before interface state
- webgui: Fixed orphan images not shown when no containers defined
- webgui: Fixed missing protocol type in container list
- webgui: Fixed missing .txt extension in SMART report files
- webgui: Docker enhancements and corrections
  - delete cache files when container is deleted
  - improved handling of user defined networks
  - optimized reading of container and image settings
  - improved handling of container IP address assignment
  - code optimization and consistency
- webgui: Fixed select color for themes white and black
- webgui: DockerCreate: show unassigned IP addresses as 0.0.0.0
- webgui: VM Machines: get rid of the Actions column
- webgui: VMs: allow SCSI bus type selection for disks and cdroms
- webgui: Fixed display of error codes in SWAL
- webgui: VMmachine updates
  - changed DETACH is available when VM is running
  - default bus to VirtIO
  - minor layout changes
- webgui: Docker only remove icons when container/image is deleted
- webgui: DockerClient: sort container names alphabetically and port numbers numerically
- webgui: Sort unassigned devices by disk size, disk model, disk name
  - This groups disks together by size, followed by same model, and lastly their assigned name (sdX)
- webgui: Dokcer combine used ports and ips in single list
- webgui: Fixed: dashboard apps, properly initialize menu variable
- webgui: Reduced container list to one call to docker only for all containers at once
- webgui: Fixed VM 'detach' button
- webgui: Add short delay in array list update after spin up/spin down of disk
- webgui: Fix Create Docker php warning
- webgui: Diagnostic improvements
- webgui: Fixed false "next" announcement when on "stable " release
- webgui: Fixed removal of container and updating of json file
- webgui: Restore Apply button to previous behavior
- webgui: Docker add/edit: corrected list of exposed ports and assigned IPs
- webgui: Docker: unrestricted edit in authoring mode
- webgui: VM manager: fix increasing vdisk size
- webgui: Added "Update all Plugins" button to plugins page
- webgui: Execute docker commands with timeout
- webgui: Do version checking on source file loading
- webgui: Set vertical scroll bar only in VM dropdown file lists
- webgui: Fixed disk share cycling
- webgui: Made "spinner" consistent in every display theme
- webgui: Plug Security Hole In Docker Template PostArgs
- webgui: Wording change on a error returned by plugin manager
- webgui: Docker: remove BOND members from custom network list
- webgui: DockerClient: improved caching
- webgui: Show zero source address when container is stopped
- webgui: Regression: fix network mode in container list
- webgui: Regression: fix container sorting
- webgui: Regression: return LOG display as before in docker list
- webgui: Add "reset sorting" to docker and VM list
- webgui: Allow user sorting preference for containers and VMs
  - Sorting preference also dictates the sequence in which containers and VMs are started and stopped (reversed)
- webgui: Fixed regression error in plugin updates
- webgui: Fixed port mapping of user defined networks
- webgui: Fixes and improvements for Docker
  - fixed deletion of orphan images
  - inline list update when removing container or image
  - fixed list updating after execution error
  - added animation when removing container or image
  - delete old xml file when container is renamed
  - fixed IP assignment with multiple containers based on the same image
- webgui: Fixed VM list updating when VM is deleted
- webgui: Added ability to remove downloaded virtio iso files from the VM Settings page
- webgui: Allow concurrent virtio iso downloads on VM Settings page; fix progress display upon page refresh
- webgui: Docker: Don't automatically update webUI entry on templates
- webgui: Make disk spin up/down inline without refresh of complete page
- webgui: Docker Security: Remove any present script and iframe tags from all elements in a template
- webgui: Docker: Don't automatically update webUI entry on templates
- webgui: VM manager: replace pause icon for refresh when updating
- webgui: Change animation to spinning "refresh"
- webgui: Minor correction: let container list start in basic view with collapsed rows when no cookie is set yet
- webgui: Fix "Schedule" reference in tabbed/non-tabbed mode and return to Main page
- webgui: Do Clear Statistics inline without complete page refresh
- webgui: Fixed wrong cpu references in popup window in VM list
]]>
</CHANGES>

<!--
Be compatible with unRAID-5 installplg
-->
<FILE Name="/tmp/&name;.sh" Run="/bin/bash">
<INLINE>
rm /tmp/&name;.sh
# cleanup possibly failed previous download/install attempt
rm -rf /tmp/&name;*
mkdir /tmp/&name;
# check if this is unRAID-5
source /etc/unraid-version
if [[ "${version:0:2}" == "5." ]]; then
  # prevent endless install loop
  rm -rf /boot/plugins/&name;.plg
  rm -rf /boot/config/plugins/&name;.plg
  # check if 64-bit capable CPU
  if ! grep -q " lm" /proc/cpuinfo ; then
    echo "CPU is not 64-bit capable"
    exit 1
  fi
  # Wait until network is ready by pinging google - thanks bonienl!
  ip=8.8.4.4
  timer=30
  while [[ $timer -gt 0 ]]; do
    if [[ -n $(route -n|awk '/^0.0.0.0/{print $2}') &amp;&amp; $(ping -qnc1 $ip|awk '/received/{print $4}') -eq 1 ]]; then
      break
    fi
    ((timer--))
    sleep 1
  done
  if [[ $timer -eq 0 ]]; then
    echo "No network communication !!!"
    exit 1
  fi
  # unRAID-5 needs infozip
  if [ ! -f /boot/extra/&infozip; ]; then
    echo "Downloading &infozip; package"
    mkdir -p /boot/extra
    wget http://slackware.cs.utah.edu/pub/slackware/slackware-13.1/slackware/a/&infozip; -O /boot/extra/&infozip;
    upgradepkg --install-new /boot/extra/&infozip;
  fi
  # download the release
  if ! wget --no-check-certificate &zip; -O /tmp/&name;.zip ; then
    echo "&zip; download error $?"
    exit 1
  fi
  if ! wget --no-check-certificate &md5; -O /tmp/&name;.md5 ; then
    echo "&md5; download error $?"
    exit 1
  fi
fi
</INLINE>
</FILE>

<!--
Download release from S3
For unRAID-5 this will be skipped because already downloaded above
For unRAID-6 we download here, verifying certificiate
-->
<FILE Name="/tmp/&name;.zip">
<URL>&zip;</URL>
</FILE>
<FILE Name="/tmp/&name;.md5">
<URL>&md5;</URL>
</FILE>

<FILE Name="/tmp/&name;.sh" Run="/bin/bash">
<INLINE>
rm /tmp/&name;.sh
# check download and extract
sum1=$(/usr/bin/md5sum /tmp/&name;.zip)
sum2=$(cat /tmp/&name;.md5)
if [[ "${sum1:0:32}" != "${sum2:0:32}" ]]; then
  echo "wrong md5"
  exit 1
fi
if ! unzip -d /tmp/&name; /tmp/&name;.zip ; then
  echo "unzip error $?"
  exit 1
fi
# check if enough free space on flash
have=$(df -k /boot | awk ' END { print $4 } ')
need=$(du -Ssk /tmp/&name; | awk ' END { print $1 } ')
source /etc/unraid-version
if [[ "${version:0:2}" == "5." ]]; then
  # to permit another upgrade
  need=$(($need * 2))
fi
# add some margin for possible additional config info
need=$(($need + 8192))
if [[ $need -gt $have ]]; then
  echo "boot device shows $have free but upgrade needs $need"
  exit 1
fi
# move release files to flash
mkdir -p /boot/&name;
rm -rf /boot/&name;/*
if ! mv /tmp/&name;/{&files;} /boot/&name; ; then
  echo "flash write error $?, maybe corrupted?"
  rm -rf /boot/&name;/*
  exit 1
fi
# preserve previous version
source /etc/unraid-version
if [[ "${version:0:2}" == "6." ]]; then
  mkdir -p /boot/previous
  rm -rf /boot/previous/*
  mv /boot/{&files;} /boot/previous
else
  mkdir -p /boot/unRAID5
  rm -rf /boot/unRAID5/*
  # preserve all files in root of flash except ldlinux.sys needed to boot
  find /boot -maxdepth 1 -type f -not -name ldlinux.sys -exec mv {} /boot/unRAID5 \;
  # preserve a few directories
  mv /boot/extra /boot/unRAID5 &amp;&gt; /dev/null
  mv /boot/packages /boot/unRAID5 &amp;&gt; /dev/null
  mv /boot/plugins /boot/unRAID5 &amp;&gt; /dev/null
  mkdir /boot/unRAID5/config
  mv /boot/config/plugins /boot/unRAID5/config &amp;&gt; /dev/null
  # grab a fresh 'go' file
  mv /boot/config/go /boot/unRAID5/config
  cp /tmp/&name;/config/go /boot/config
  # ensure key file is in the 'config' directory
  cp /boot/unRAID5/*.key /boot/config &amp;&gt; /dev/null
fi
# move new version files into place
mv /boot/&name;/* /boot
rmdir /boot/&name;
# move the new syslinux.cfg- in to the syslinux folder
if [[ -f /boot/syslinux.cfg- ]]; then
  mv /boot/syslinux.cfg- /boot/syslinux
fi
# if unRaid-6 replace the readme file
if [[ "${version:0:2}" == "6." ]]; then
  echo "**REBOOT REQUIRED!**" &gt; /usr/local/emhttp/plugins/&name;/README.md
fi
# if unRaid-6.3 ensure GUI Safe Mode syslinux option exists
if [[ "${version:0:3}" == "6.3" ]]; then
  if ! grep -q 'initrd=/bzroot,/bzroot-gui unraidsafemode' /boot/syslinux/syslinux.cfg &amp;&gt; /dev/null ; then
    sed -i 's|label Memtest86+|label unRAID OS GUI Safe Mode (no plugins)\r\n  kernel /bzimage\r\n  append initrd=/bzroot,/bzroot-gui unraidsafemode\r\nlabel Memtest86+|g' /boot/syslinux/syslinux.cfg &amp;&gt; /dev/null
  fi
fi
# when upgrading any version prior to 6.2
if [[ "${version:0:3}" &lt; "6.2" ]]; then
  if ! grep -q '/bzroot-gui' /boot/syslinux/syslinux.cfg &amp;&gt; /dev/null ; then
    sed -i 's|menu title Lime Technology\r|menu title Lime Technology, Inc.\r|g' /boot/syslinux/syslinux.cfg &amp;&gt; /dev/null
    sed -i 's|label unRAID OS Safe Mode (no plugins)|label unRAID OS GUI Mode\r\n  kernel /bzimage\r\n  append initrd=/bzroot,/bzroot-gui\r\nlabel unRAID OS Safe Mode (no plugins, no GUI)|g' /boot/syslinux/syslinux.cfg &amp;&gt; /dev/null
  fi
fi
# when upgrading any version prior to 6.1
if [[ "${version:0:3}" &lt; "6.1" ]]; then
  if ! grep -q 'shareDisk' /boot/config/share.cfg &amp;&gt; /dev/null ; then
    echo 'shareDisk="yes"' &gt;&gt; /boot/config/share.cfg
  fi
fi
# when upgrading from 6.0.x
if [[ "${version:0:3}" == "6.0" ]]; then
  sed -i 's|dynamix.docker.manager/dockerupdate.php|dynamix.docker.manager/scripts/dockerupdate.php|g' /boot/config/plugins/dynamix/docker-update.cron &amp;&gt; /dev/null
  sed -i 's|sbin/monitor|emhttp/plugins/dynamix/scripts/monitor|g' /boot/config/plugins/dynamix/monitor.cron &amp;&gt; /dev/null
  sed -i 's|/root/mdcmd|/usr/local/sbin/mdcmd|g' /boot/config/plugins/dynamix/parity-check.cron &amp;&gt; /dev/null
  sed -i 's|sbin/plugincheck|emhttp/plugins/dynamix.plugin.manager/scripts/plugincheck|g' /boot/config/plugins/dynamix/plugin-check.cron &amp;&gt; /dev/null
  sed -i 's|sbin/statuscheck|emhttp/plugins/dynamix/scripts/statuscheck|g' /boot/config/plugins/dynamix/status-check.cron &amp;&gt; /dev/null
fi
# if template-repos does not exist
if [[ ! -e /boot/config/plugins/dockerMan/template-repos ]]; then
  mkdir -p /boot/config/plugins/dockerMan
  echo "https://github.com/limetech/docker-templates" &gt; /boot/config/plugins/dockerMan/template-repos
fi
# correct initial EFI syslinux.cfg
if [[ -d /boot/EFI/boot &amp;&amp; "${version}" == "6.4.0-rc4" ]]; then
  cp /tmp/&name;/EFI-/boot/syslinux.cfg /boot/EFI/boot
fi
# if EFI or EFI- directory does not exist
if [[ ! -e /boot/EFI &amp;&amp; ! -e /boot/EFI- ]]; then
  mv /tmp/&name;/EFI- /boot
  sed -i 's|default /syslinux/menu.c32|default menu.c32|g' /boot/syslinux/syslinux.cfg &amp;&gt; /dev/null
fi
# if metric appended to GATEWAY get rid of it
if [[ -f /boot/config/network.cfg ]]; then
  sed -ri 's|^(GATEWAY.+)#[0-9]+|\1|' /boot/config/network.cfg
fi
echo "syncing - please wait..."
sync
echo "Update successful - PLEASE REBOOT YOUR SERVER"
</INLINE>
</FILE>

<!--
The 'remove' script.
-->
<FILE Name="/tmp/&name;.sh" Run="/bin/bash" Method="remove">
<INLINE>
rm /tmp/&name;.sh
# unRAID-5 doesn't support 'remove' method, so we're done
source /etc/unraid-version
if [[ "${version:0:2}" == "5." ]]; then
  exit 0
fi
if [[ -d /boot/previous ]]; then
  # restore previous unRAID-6 release
  mv /boot/previous/* /boot
  rmdir /boot/previous
  echo "**REBOOT REQUIRED!**" &gt; /usr/local/emhttp/plugins/&name;/README.md
elif [[ -d /boot/unRAID5 ]]; then
  # restore previous unRAID-5 release
  rm -rf /boot/extra
  mv /boot/unRAID5/extra /boot &amp;&gt; /dev/null
  rm -rf /boot/plugins
  mv /boot/unRAID5/plugins /boot &amp;&gt; /dev/null
  rm -rf /boot/packages
  mv /boot/unRAID5/packages /boot &amp;&gt; /dev/null
  rm -rf /boot/config/plugins
  mv /boot/unRAID5/config/plugins /boot/config &amp;&gt; /dev/null
  mv /boot/unRAID5/config/go /boot/config
  rmdir /boot/unRAID5/config
  mv /boot/unRAID5/* /boot
  rmdir /boot/unRAID5
else
  echo "Cannot remove, no previous version"
  exit 1
fi
echo "syncing..."
sync
echo "Remove successful - PLEASE REBOOT YOUR SERVER"
</INLINE>
</FILE>

</PLUGIN>
